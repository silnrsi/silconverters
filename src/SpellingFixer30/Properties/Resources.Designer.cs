//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpellingFixer30.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SpellingFixer30.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This grid displays sets of words which are potentially misspelled. Your job (with your knowledge of the language) is to indicate 
        ///whether one word in a row is a misspelled version of the other or whether both words are correct. 
        ///
        ///Words which are marked as being correct will be added to the dictionary of known good words and words which are incorrect will be 
        ///added to a database of bad-to-good pairs which can be used to fix the occurrences of the misspelled word.
        ///
        ///If a word is only ambiguous with one o [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BulkGridHelp {
            get {
                return ResourceManager.GetString("BulkGridHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the &quot;Compare double characters&quot; box if you want words with two consecutive identical letters to be
        ///compared with words that lack the two consecutive identical letters (e.g. &quot;badda&quot; will be considered a 
        ///potential mispelling of &quot;bada&quot;).
        ///    .
        /// </summary>
        internal static string checkBoxCompareDoubleCharsHelp {
            get {
                return ResourceManager.GetString("checkBoxCompareDoubleCharsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the &quot;Ignore case&quot; box if you want words with upper case letters to be compared with words that lack
        ///upper case letters (e.g. &quot;Philip&quot; will be considered a potential misspelling of &quot;philip&quot;). This applies
        ///to the Latin transliterated form of the words; not the vernacular forms.
        ///    .
        /// </summary>
        internal static string checkBoxIgnoreCaseHelp {
            get {
                return ResourceManager.GetString("checkBoxIgnoreCaseHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each vernacular writing system (e.g. Devanagari, Greek, Hebrew, etc.) can have different characteristics 
        ///which are the source of frequent spelling mistakes. 
        ///
        ///For example, Hindi has two different characters used for vowel nasalization (i.e. devanagari_sign_anusvara
        ///and devanagari_sign_candrabindu). The rules for when to use one vs the other are ambiguous and consequently 
        ///are the source of frequent spelling variation.
        ///
        ///In fact, the Consistent Spelling Fixer application will typically work with any w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string comboBoxVernScriptTypeHelp {
            get {
                return ResourceManager.GetString("comboBoxVernScriptTypeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This box corresponds with a definition of a single ambiguity rule. It is defined in the Vernacular 
        ///Script System file chosen on the previous tab and represents one potential source of spelling 
        ///variation to be checked for. If you want to edit the rules, you can right-click on this item.
        ///    .
        /// </summary>
        internal static string DistinctionRuleCheckBoxHelp {
            get {
                return ResourceManager.GetString("DistinctionRuleCheckBoxHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This window is for entering simplification rules. This application works by comparing words that differ between 
        ///the &apos;From&apos; and &apos;Into&apos; values in the tree below.
        ///    
        ///When a &apos;From&apos; value occurs in a word, it will be &apos;simplified&apos; into the &apos;Into&apos; value so that it becomes ambiguous 
        ///with the &apos;Into&apos; value, which causes the program to consider them as inconsistent and potentially misspelled.
        ///
        ///You want to create a simplification rule for any characters/strings which are frequently mixed up so that the 
        ///prog [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DistinctionTreeHelp {
            get {
                return ResourceManager.GetString("DistinctionTreeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap FillLeft {
            get {
                object obj = ResourceManager.GetObject("FillLeft", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///The &quot;Bad Spelling&quot; box shows a misspelled word in one of your documents. By creating a &quot;bad to good&quot; replacment rule, 
        ///you are saying in effect, &quot;Every time this Bad Spelling form occurs, it should be changed to the following Replacement 
        ///form.&quot;
        ///
        ///This box supports &quot;Alt+X&quot; behavior: If you enter the 4 hex digits of a Unicode code point, and type Alt+X, it will 
        ///convert those four digits into the corresponding Unicode character (e.g. &quot;0915&quot; followed by Alt+X will result in the
        ///Devanagari Unicode chara [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string textBoxBadWordHelp {
            get {
                return ResourceManager.GetString("textBoxBadWordHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///The &quot;Replacement&quot; box shows the correct spelling for the misspelled word in the &quot;Bad Spelling&quot; box. By creating a &quot;bad 
        ///to good&quot; replacment rule, you are saying in effect, &quot;Every time the Bad Spelling form occurs, it should be changed to 
        ///this Replacement form.&quot;
        ///
        ///This box supports &quot;Alt+X&quot; behavior: If you enter the 4 hex digits of a Unicode code point, and type Alt+X, it will 
        ///convert those four digits into the corresponding Unicode character (e.g. &quot;0915&quot; followed by Alt+X will result in the
        ///Devanag [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string textBoxReplacementHelp {
            get {
                return ResourceManager.GetString("textBoxReplacementHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Select the word you want to change and press the F2 key to edit. 
        ///When you are finished, press the Enter key to save the value.
        ///
        ///You can also right click on a row to edit the words with the 
        ///&apos;Fix Spelling&apos; window.
        ///
        ///To delete a row, click on its row header, and press the Delete key.
        ///
        ///To add a row, select the last (empty) row and follow the instructions 
        ///above for editing.
        ///    .
        /// </summary>
        internal static string ViewBadGoodPairsBad2GoodHelp {
            get {
                return ResourceManager.GetString("ViewBadGoodPairsBad2GoodHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Select the word you want to change and press the F2 key to edit. 
        ///When you are finished, press the Enter key to save the value.
        ///
        ///To delete a word, click on it, and press the Delete key.
        ///
        ///To add a row, click on the last (empty) cell and press F2 to edit 
        ///the new word.
        ///    .
        /// </summary>
        internal static string ViewBadGoodPairsDictionaryHelp {
            get {
                return ResourceManager.GetString("ViewBadGoodPairsDictionaryHelp", resourceCulture);
            }
        }
    }
}
